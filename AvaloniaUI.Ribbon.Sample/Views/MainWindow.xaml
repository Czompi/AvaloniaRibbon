<ribbon:RibbonWindow
    x:Class="AvaloniaUI.Ribbon.Samples.Views.MainWindow"
    x:Name="MainWindow"
    xmlns="https://github.com/avaloniaui"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
    xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
    xmlns:vm="clr-namespace:AvaloniaUI.Ribbon.Samples.ViewModels;assembly=AvaloniaUI.Ribbon.Sample"
    xmlns:v="clr-namespace:AvaloniaUI.Ribbon.Samples.Views;assembly=AvaloniaUI.Ribbon.Sample"
    xmlns:ribbon="clr-namespace:AvaloniaUI.Ribbon;assembly=AvaloniaUI.Ribbon"
    Title="Avalonia Ribbon"
    Width="980"
    Height="720"
    MinWidth="500"
    MinHeight="500"
    BorderBrush="{DynamicResource FillBrush}"
    TitleBarForeground="White"
    Icon="/Assets/avalonia-logo.ico"
    mc:Ignorable="d"
    Orientation="{Binding RibbonOrientation}">
  <ribbon:RibbonWindow.DataContext>
    <vm:MainWindowViewModel />
  </ribbon:RibbonWindow.DataContext>
  <ribbon:RibbonWindow.Resources>
		<ResourceDictionary>
			<ResourceDictionary.MergedDictionaries>
    		<ResourceInclude Source="avares://AvaloniaUI.Ribbon.Sample/Resources/SampleIcons.xaml" />
			</ResourceDictionary.MergedDictionaries>
		</ResourceDictionary>
  </ribbon:RibbonWindow.Resources>
  <ribbon:RibbonWindow.Styles>
    <StyleInclude Source="avares://AvaloniaUI.Ribbon.Sample/Resources/SampleStyles.xaml" />
  </ribbon:RibbonWindow.Styles>
  <ribbon:RibbonWindow.TitleBarBackground>
    <VisualBrush Stretch="None" AlignmentX="Left" AlignmentY="Top">
      <VisualBrush.Visual>
        <Panel Background="{DynamicResource FillBrush}" Width="{Binding #MainWindow.Bounds.Width}" Height="{Binding #MainWindow.Bounds.Height}">
          <Panel.Resources>
            <SolidColorBrush x:Key="FillBrush">#C02B579A</SolidColorBrush>
            <SolidColorBrush x:Key="LineBrush">#FF274F8C</SolidColorBrush>
          </Panel.Resources>
          <Panel.Styles>
            <Style Selector="Path">
              <Setter Property="Stroke" Value="{DynamicResource LineBrush}"/>
              <Setter Property="StrokeThickness" Value="4"/>
              <Setter Property="StrokeJoin" Value="Round"/>
            </Style>

            <Style Selector="Ellipse">
              <Setter Property="Fill" Value="{DynamicResource FillBrush}"/>
              <Setter Property="Stroke" Value="{DynamicResource LineBrush}"/>
              <Setter Property="StrokeThickness" Value="3"/>
              <Setter Property="Width" Value="10"/>
              <Setter Property="Height" Value="10"/>
            </Style>
          </Panel.Styles>
          <Canvas Width="456" Height="60" HorizontalAlignment="Right" VerticalAlignment="Top" ClipToBounds="True">
            <Path Data="M 14 6 L 194 6 L 249 45 L 340 45 L 362 21 L 480 21"/>
            <Ellipse Canvas.Left="9" Canvas.Top="1"/>
            <Ellipse Canvas.Left="168" Canvas.Top="1"/>

            <Path Data="M 5 50 L 93 50 L 117 33 L 208 33 L 233 50 L 394 50 L 436 -1"/>
            <Ellipse Canvas.Left="0" Canvas.Top="45"/>
            <Ellipse Canvas.Left="194" Canvas.Top="28"/>


            <Ellipse Width="36" Height="36" StrokeThickness="6" Fill="Transparent" Canvas.Left="13" Canvas.Top="11"/>
            <Path Data="M 26 36 L 26 24 L 38 24" StrokeThickness="5" StrokeJoin="Miter"/>
            <Path Data="M 26 24 L 38 36" StrokeThickness="5" StrokeJoin="Miter"/>
            
            <Ellipse Width="55" Height="55" StrokeThickness="6" Fill="Transparent" Canvas.Left="232" Canvas.Top="-19"/>
            <Path Data="M 249 -4 L 269 -4 L 269 16" StrokeThickness="6" StrokeJoin="Miter"/>
            <Path Data="M 269 -4 L 249 16" StrokeThickness="6" StrokeJoin="Miter"/>
          </Canvas>
        </Panel>
      </VisualBrush.Visual>
    </VisualBrush>
  </ribbon:RibbonWindow.TitleBarBackground>
  <ribbon:RibbonWindow.Ribbon>
    <v:MainRibbon/>
  </ribbon:RibbonWindow.Ribbon>
  <ribbon:RibbonWindow.QuickAccessToolbar>
    <ribbon:QuickAccessToolbar>
      <ribbon:QuickAccessToolbar.RecommendedItems>
        <ribbon:QuickAccessRecommendation Item="{Binding #RibbonButton1}"/>
        <ribbon:QuickAccessRecommendation Item="{Binding #RibbonButton2}"/>
        <ribbon:QuickAccessRecommendation Item="{Binding #RibbonButton3}"/>
      </ribbon:QuickAccessToolbar.RecommendedItems>
      <ribbon:QuickAccessItem Item="{Binding #RibbonButton1}"/>
    </ribbon:QuickAccessToolbar>
  </ribbon:RibbonWindow.QuickAccessToolbar>
  <StackPanel Orientation="Vertical" HorizontalAlignment="Center" VerticalAlignment="Center" Spacing="5" Margin="25">
    <HeaderedContentControl Classes="groupBox" Header="Appearance">
      <StackPanel Orientation="Vertical" Spacing="10">
        <ToggleSwitch x:Name="LightsToggleSwitch" IsChecked="True" OnContent="Lights on" OffContent="Lights off"/>
        <CheckBox IsChecked="{Binding HasSystemDecorations, RelativeSource={RelativeSource Mode=FindAncestor, AncestorType=Window}, Mode=TwoWay}" Content="Use System Decorations"/>
      </StackPanel>
    </HeaderedContentControl>
    <HeaderedContentControl Classes="groupBox" Header="Layout">
      <StackPanel Orientation="Vertical" Spacing="10">
        <StackPanel Orientation="Horizontal" Spacing="10">
          <TextBlock Text="Orientation" FontSize="{DynamicResource ControlContentThemeFontSize}" VerticalAlignment="Center"/>
          <ComboBox SelectedIndex="0">
            <ComboBoxItem Content="Horizontal"/>
            <ComboBoxItem Content="Vertical" IsSelected="{Binding IsRibbonVertical, Mode=TwoWay}"/>
          </ComboBox>
        </StackPanel>
        <CheckBox IsChecked="{Binding IsRibbonCollapsed, Mode=TwoWay}" Content="Collapse Ribbon"/>
      </StackPanel>
    </HeaderedContentControl>
    <HeaderedContentControl Classes="groupBox" Header="Content">
      <StackPanel Orientation="Vertical" Spacing="10">
        <!--StackPanel Orientation="Horizontal" Spacing="10">
          <TextBlock Text="Last action was" FontSize="{DynamicResource ControlContentThemeFontSize}" VerticalAlignment="Center"/>
          <TextBlock Text="{Binding LastActionText}" FontSize="{DynamicResource ControlContentThemeFontSize}" VerticalAlignment="Center"/>
        </StackPanel-->
        <CheckBox IsChecked="{Binding ShowContextualGroup1}" Content="Show Contextual tab group 1"/>
        <CheckBox IsChecked="{Binding ShowContextualGroup2}" Content="Show Contextual tab group 2"/>
        <CheckBox IsChecked="{Binding ShowContextualGroup3}" Content="Show Contextual tab group 3, which has a very long name so you can easily see that its only tab's width does not prohibit the group from getting wider as needed"/>
      </StackPanel>
    </HeaderedContentControl>
  </StackPanel>
</ribbon:RibbonWindow>